plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id 'java'
	id 'java-library'
	id 'idea'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "%s+%s".formatted(project.mod_version, project.minecraft_version)
group = project.maven_group

repositories{
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven{
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url = uri("https://ueaj.dev/maven")
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"


//	modImplementation "maven.modrinth:architects-palette-fabric:2.2.1"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//	modImplementation("net.devtech:arrp:0.6.7")
	modApi("maven.modrinth:cloth-config:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "maven.modrinth:modmenu:${project.mod_menu_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/connectiblechains.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

}
sourceSets {
    main {
        resources {
            exclude "assets/images"
        }
    }
}
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	//noinspection ALL
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from ("LICENSE") {
		rename {"${it}_${project.archivesBaseName}"}
	}
}
